{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "covid-reporting254-adf"
		},
		"ls_ablob_covidreportingsa254_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_ablob_covidreportingsa254'"
		},
		"ls_adls_covidreportingdl254_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_adls_covidreportingdl254'"
		},
		"ls_adls_covidreportingdl254_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://covidreportingdl254.dfs.core.windows.net"
		},
		"ls_http_operanda_ecdc_europa_eu_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "@{linkedService().sourcebaseURL}"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ls_ablob_covidreportingsa254')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('ls_ablob_covidreportingsa254_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_adls_covidreportingdl254')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_adls_covidreportingdl254_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_adls_covidreportingdl254_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_http_operanda_ecdc_europa_eu')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"sourcebaseURL": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('ls_http_operanda_ecdc_europa_eu_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_Dim_dateLookup')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_covidreportingdl254",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "dim_date.csv",
						"fileSystem": "lookup"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "date_key",
						"type": "String"
					},
					{
						"name": "date",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "day",
						"type": "String"
					},
					{
						"name": "day_name",
						"type": "String"
					},
					{
						"name": "day_of_year",
						"type": "String"
					},
					{
						"name": "week_of_month",
						"type": "String"
					},
					{
						"name": "week_of_year",
						"type": "String"
					},
					{
						"name": "month_name",
						"type": "String"
					},
					{
						"name": "year_month",
						"type": "String"
					},
					{
						"name": "year_week",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls_covidreportingdl254')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_LookupCountryCode')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_covidreportingdl254",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "country_lookup.csv",
						"fileSystem": "lookup"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "country",
						"type": "String"
					},
					{
						"name": "country_code_2_digit",
						"type": "String"
					},
					{
						"name": "country_code_3_digit",
						"type": "String"
					},
					{
						"name": "continent",
						"type": "String"
					},
					{
						"name": "population",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls_covidreportingdl254')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_ProcessedCases')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_covidreportingdl254",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "ecdc/cases",
						"fileSystem": "processed"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls_covidreportingdl254')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_cases')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_covidreportingdl254",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "cases_deaths.csv",
						"folderPath": "ecdc",
						"fileSystem": "raw254"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "country",
						"type": "String"
					},
					{
						"name": "country_code",
						"type": "String"
					},
					{
						"name": "continent",
						"type": "String"
					},
					{
						"name": "population",
						"type": "String"
					},
					{
						"name": "indicator",
						"type": "String"
					},
					{
						"name": "daily_count",
						"type": "String"
					},
					{
						"name": "date",
						"type": "String"
					},
					{
						"name": "rate_14_day",
						"type": "String"
					},
					{
						"name": "source",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls_covidreportingdl254')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_ecdc_file_list')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_ablob_covidreportingsa254",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ecdc_file_list.json",
						"container": "configs"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"sourceRelativeURL": {
							"type": "string"
						},
						"sinkFileName": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_ablob_covidreportingsa254')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_ecdc_raw_csv_dl')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_covidreportingdl254",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"fileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": "ecdc",
						"fileSystem": "raw254"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls_covidreportingdl254')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_ecdc_raw_csv_http')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_http_operanda_ecdc_europa_eu",
					"type": "LinkedServiceReference",
					"parameters": {
						"sourcebaseURL": {
							"value": "@dataset().baseURL",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"relativeURL": {
						"type": "string"
					},
					"baseURL": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "@dataset().relativeURL",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_http_operanda_ecdc_europa_eu')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_population_raw_gz')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_ablob_covidreportingsa254",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "population_by_age.tsv.gz",
						"container": "population"
					},
					"columnDelimiter": "\t",
					"compressionCodec": "gzip",
					"compressionLevel": "Optimal",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_ablob_covidreportingsa254')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_population_raw_tsv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_covidreportingdl254",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "population_by_age_tsv",
						"folderPath": "population",
						"fileSystem": "raw254"
					},
					"columnDelimiter": "\t",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls_covidreportingdl254')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_processed_hospital_Admissions_daily')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_covidreportingdl254",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "ecdc/hospital_admissions_daily",
						"fileSystem": "processed"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls_covidreportingdl254')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_processed_hospital_Admissions_weekly')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_covidreportingdl254",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "ecdc/hospital_admissions_weekly",
						"fileSystem": "processed"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls_covidreportingdl254')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_raw_hospital_admission')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_covidreportingdl254",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "hospital_admissions.csv",
						"folderPath": "ecdc",
						"fileSystem": "raw254"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "country",
						"type": "String"
					},
					{
						"name": "indicator",
						"type": "String"
					},
					{
						"name": "date",
						"type": "String"
					},
					{
						"name": "year_week",
						"type": "String"
					},
					{
						"name": "value",
						"type": "String"
					},
					{
						"name": "source",
						"type": "String"
					},
					{
						"name": "url",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls_covidreportingdl254')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_ingest_ecdc_data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup ECDC filelist",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "ds_ecdc_file_list",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "execute copy for every record",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup ECDC filelist",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup ECDC filelist').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "copy_ecdc_data",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_ecdc_raw_csv_http",
											"type": "DatasetReference",
											"parameters": {
												"relativeURL": {
													"value": "@item().sourceRelativeURL",
													"type": "Expression"
												},
												"baseURL": {
													"value": "@item().sourceBaseURL",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_ecdc_raw_csv_dl",
											"type": "DatasetReference",
											"parameters": {
												"fileName": {
													"value": "@item().sinkFileName",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"concurrency": 1,
				"annotations": [],
				"lastPublishTime": "2021-06-05T13:10:03Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_ecdc_file_list')]",
				"[concat(variables('factoryId'), '/datasets/ds_ecdc_raw_csv_http')]",
				"[concat(variables('factoryId'), '/datasets/ds_ecdc_raw_csv_dl')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_ingest_population_data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "check if file exists",
						"type": "Validation",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_population_raw_gz",
								"type": "DatasetReference",
								"parameters": {}
							},
							"timeout": "0.00:05:00",
							"sleep": 60,
							"minimumSize": 1024
						}
					},
					{
						"name": "Get file Metadata",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "check if file exists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_population_raw_gz",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"columnCount",
								"size",
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "if column count matches",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Get file Metadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('Get file Metadata').output.columncount,13)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "copy_population_data",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.00:05:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_population_raw_gz",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_population_raw_tsv",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Delete source file",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "copy_population_data",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ds_population_raw_gz",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-06-03T16:12:31Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_population_raw_gz')]",
				"[concat(variables('factoryId'), '/datasets/ds_population_raw_tsv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_transform_cases_deaths')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_cases",
								"type": "DatasetReference"
							},
							"name": "sourcecases"
						},
						{
							"dataset": {
								"referenceName": "ds_LookupCountryCode",
								"type": "DatasetReference"
							},
							"name": "LookupCountry"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_ProcessedCases",
								"type": "DatasetReference"
							},
							"name": "SinkCases"
						}
					],
					"transformations": [
						{
							"name": "FilterEuropeOnly"
						},
						{
							"name": "SelectOnlyRequiredFields"
						},
						{
							"name": "PivotCounts"
						},
						{
							"name": "CountryLookup"
						},
						{
							"name": "SelectForSink"
						}
					],
					"script": "source(output(\n\t\tcountry as string,\n\t\tcountry_code as string,\n\t\tcontinent as string,\n\t\tpopulation as integer,\n\t\tindicator as string,\n\t\tdaily_count as integer,\n\t\tdate as date,\n\t\trate_14_day as double,\n\t\tsource as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> sourcecases\nsource(output(\n\t\tcountry as string,\n\t\tcountry_code_2_digit as string,\n\t\tcountry_code_3_digit as string,\n\t\tcontinent as string,\n\t\tpopulation as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> LookupCountry\nsourcecases filter(continent=='Europe' && not(isNull(country_code))) ~> FilterEuropeOnly\nFilterEuropeOnly select(mapColumn(\n\t\tcountry,\n\t\tcountry_code,\n\t\tpopulation,\n\t\tindicator,\n\t\tdaily_count,\n\t\tsource,\n\t\teach(match(name=='date'),\n\t\t\t'Reported Date' = $$)\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectOnlyRequiredFields\nSelectOnlyRequiredFields pivot(groupBy(country,\n\t\tcountry_code,\n\t\tpopulation,\n\t\tsource,\n\t\t{Reported Date}),\n\tpivotBy(indicator, ['confirmed cases', 'deaths']),\n\tcount = sum(daily_count),\n\tcolumnNaming: '$V_$N',\n\tlateral: true) ~> PivotCounts\nPivotCounts, LookupCountry lookup(PivotCounts@country == LookupCountry@country,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> CountryLookup\nCountryLookup select(mapColumn(\n\t\tcountry = LookupCountry@country,\n\t\tcountry_code_2_digit,\n\t\tcountry_code_3_digit,\n\t\t{confirmed cases_count},\n\t\tdeaths_count,\n\t\t{Reported Date},\n\t\tpopulation = LookupCountry@population,\n\t\tsource\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectForSink\nSelectForSink sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tumask: 0022,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SinkCases"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_cases')]",
				"[concat(variables('factoryId'), '/datasets/ds_LookupCountryCode')]",
				"[concat(variables('factoryId'), '/datasets/ds_ProcessedCases')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_transforms_hospital_Admissions')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_raw_hospital_admission",
								"type": "DatasetReference"
							},
							"name": "HospitalAdmissiinsSource"
						},
						{
							"dataset": {
								"referenceName": "ds_LookupCountryCode",
								"type": "DatasetReference"
							},
							"name": "countrySource"
						},
						{
							"dataset": {
								"referenceName": "ds_Dim_dateLookup",
								"type": "DatasetReference"
							},
							"name": "DimDataSource"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_processed_hospital_Admissions_weekly",
								"type": "DatasetReference"
							},
							"name": "weeklySink"
						},
						{
							"dataset": {
								"referenceName": "ds_processed_hospital_Admissions_daily",
								"type": "DatasetReference"
							},
							"name": "dailySink"
						}
					],
					"transformations": [
						{
							"name": "SelectReqdFields"
						},
						{
							"name": "LookupCountry"
						},
						{
							"name": "SelectRequiredFields"
						},
						{
							"name": "SplitDailyFromweekly"
						},
						{
							"name": "DeriveECDCYearWeek"
						},
						{
							"name": "AggDimDate"
						},
						{
							"name": "JoinWithDate"
						},
						{
							"name": "PivotWeekly"
						},
						{
							"name": "PivotDaily"
						},
						{
							"name": "SortWeekly"
						},
						{
							"name": "SortDaily"
						},
						{
							"name": "SelectWeekly"
						},
						{
							"name": "SelectDaily"
						}
					],
					"script": "source(output(\n\t\tcountry as string,\n\t\tindicator as string,\n\t\tdate as date,\n\t\tyear_week as string,\n\t\tvalue as double,\n\t\tsource as string,\n\t\turl as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> HospitalAdmissiinsSource\nsource(output(\n\t\tcountry as string,\n\t\tcountry_code_2_digit as string,\n\t\tcountry_code_3_digit as string,\n\t\tcontinent as string,\n\t\tpopulation as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> countrySource\nsource(output(\n\t\tdate_key as string,\n\t\tdate as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tday as string,\n\t\tday_name as string,\n\t\tday_of_year as string,\n\t\tweek_of_month as string,\n\t\tweek_of_year as string,\n\t\tmonth_name as string,\n\t\tyear_month as string,\n\t\tyear_week as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> DimDataSource\nHospitalAdmissiinsSource select(mapColumn(\n\t\tcountry,\n\t\tindicator,\n\t\treported_date = date,\n\t\treported_year_week = year_week,\n\t\tvalue,\n\t\tsource\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectReqdFields\nSelectReqdFields, countrySource lookup(SelectReqdFields@country == countrySource@country,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LookupCountry\nLookupCountry select(mapColumn(\n\t\tcountry = SelectReqdFields@country,\n\t\tindicator,\n\t\treported_date,\n\t\treported_year_week,\n\t\tvalue,\n\t\tsource,\n\t\tcountry = countrySource@country,\n\t\tcountry_code_2_digit,\n\t\tcountry_code_3_digit,\n\t\tpopulation\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectRequiredFields\nSelectRequiredFields split(indicator == 'Weekly new hospital admissions per 100k' || indicator == 'Weekly new ICU admissions per 100k',\n\tdisjoint: false) ~> SplitDailyFromweekly@(Weekly, Daily)\nDimDataSource derive(ecdc_year_week = year + '-w' + lpad(week_of_year,2,'0')) ~> DeriveECDCYearWeek\nDeriveECDCYearWeek aggregate(groupBy(ecdc_year_week),\n\tweek_start_date = min(date),\n\t\tweek_end_date = max(date)) ~> AggDimDate\nSplitDailyFromweekly@Weekly, AggDimDate join(reported_year_week == ecdc_year_week,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinWithDate\nJoinWithDate pivot(groupBy(country,\n\t\tcountry_code_2_digit,\n\t\tcountry_code_3_digit,\n\t\tpopulation,\n\t\treported_year_week,\n\t\tweek_start_date,\n\t\tweek_end_date,\n\t\tsource),\n\tpivotBy(indicator, ['Weekly new hospital admissions per 100k', 'Weekly new ICU admissions per 100k']),\n\tcount = sum(value),\n\tcolumnNaming: '$V_$N',\n\tlateral: true) ~> PivotWeekly\nSplitDailyFromweekly@Daily pivot(groupBy(country,\n\t\tcountry_code_2_digit,\n\t\tcountry_code_3_digit,\n\t\tpopulation,\n\t\treported_date,\n\t\tsource),\n\tpivotBy(indicator, ['Daily hospital occupancy', 'Daily ICU occupancy']),\n\tcount = sum(value),\n\tcolumnNaming: '$V_$N',\n\tlateral: true) ~> PivotDaily\nPivotWeekly sort(desc(reported_year_week, true),\n\tasc(country, true)) ~> SortWeekly\nPivotDaily sort(asc(reported_date, true),\n\tasc(country, true)) ~> SortDaily\nSortWeekly select(mapColumn(\n\t\tcountry,\n\t\tcountry_code_2_digit,\n\t\tcountry_code_3_digit,\n\t\tpopulation,\n\t\treported_year_week,\n\t\treported_week_start_date = week_start_date,\n\t\treported_week_end_date = week_end_date,\n\t\tnew_hospital_occupancycount = {Weekly new hospital admissions per 100k_count},\n\t\tnew_ICU_occupancycount = {Weekly new ICU admissions per 100k_count},\n\t\tsource\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectWeekly\nSortDaily select(mapColumn(\n\t\tcountry,\n\t\tcountry_code_2_digit,\n\t\tcountry_code_3_digit,\n\t\tpopulation,\n\t\treported_date,\n\t\t{hospital occupancy_count} = {Daily hospital occupancy_count},\n\t\t{ICU occupancy_count} = {Daily ICU occupancy_count},\n\t\tsource\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectDaily\nSelectWeekly sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tumask: 0022,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> weeklySink\nSelectDaily sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tumask: 0022,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dailySink"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_raw_hospital_admission')]",
				"[concat(variables('factoryId'), '/datasets/ds_LookupCountryCode')]",
				"[concat(variables('factoryId'), '/datasets/ds_Dim_dateLookup')]",
				"[concat(variables('factoryId'), '/datasets/ds_processed_hospital_Admissions_weekly')]",
				"[concat(variables('factoryId'), '/datasets/ds_processed_hospital_Admissions_daily')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_ProcessedCases')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "processed cases",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_transform_cases_deaths",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"sourcecases": {},
									"LookupCountry": {},
									"SinkCases": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "None",
							"cacheSinks": {
								"firstRowOnly": true
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_transform_cases_deaths')]"
			]
		}
	]
}